# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
  docker:
        needs: build
        runs-on: ubuntu-latest
        steps:
          -
            name: Checkout
            uses: actions/checkout@v3
          -
            name: Set up QEMU
            uses: docker/setup-qemu-action@v2
          -
            name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2
          -
            name: Login to Docker Hub
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          -
            name: Build and push
            uses: docker/build-push-action@v4
            with:
              context: .
              push: true
              tags: marcofresolone/images:app-${{ github.run_number }}
  modifygit:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: changing the deployment of git repo
        with:
          repository: 'Fresolons/asta-service'
          token: ${{ secrets.GIT_PASSWORD }}
      - name: modify the image
        run: |
          git config user.email marcofresolone1998@gmail.com
          git config user.name Marco
          pwd
          cat deployment.yaml
          pwd
          sed -i "s+marcofresolone/asta-service:app-[^ ]*+marcofresolone/asta-service:app-${RUN_NUMBER}+g" deployment.yaml
          cat deployment.yaml
          git add .
          git commit -m 'Done  by Github Actions   Job changemanifest: ${{ github.run_number }}'
          git push origin main
        env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
          RUN_NUMBER: ${{ github.run_number }}
  deploy:
    name: Deploy
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
        - name: Checkout source code
          uses: actions/checkout@v3
    
        - name: Set up SSH
          uses: webfactory/ssh-agent@v0.5.3
          with:
              ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
        - name: Deploy to Minikube on private server
          run: |
            ssh -o StrictHostKeyChecking=no user@your-server-ip << 'EOF'
            # Assicurati che kubectl e minikube siano configurati correttamente sul server
            kubectl config use-context minikube
            kubectl apply -f /path/to/your/kubernetes/manifests/project.yaml
            kubectl set image deployment/your-deployment-name your-container-name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            EOF
